!function(t,e){"use strict";var i=t.NgView=t.View.extend({initialize:function(t){this.options=t||{}},render:function(){return this._isRemoved=!1,this.scope?void this.scope.$digest():(e.element(document).ready(e.bind(this,function(){this._isReady||this._loadServices(),this.promise||(this.promise=this._getLocals().then(e.bind(this,this._onSuccess),e.bind(this,this._onError)),this.promise["finally"](e.bind(this,function(){this.promise=null}))),this._isReady=!0})),this)},remove:function(){return this._isRemoved=!0,this.scope&&(this.scope.$destroy(),this.scope=null,this.controller=null),i.__super__.remove.apply(this,arguments)},_loadServices:function(){if(this.$injector=this.options.modules?e.bootstrap(this.el,this.options.modules):e.element(document).injector(),void 0===this.$injector)throw new Error("A valid $rootScope was not found. Please see https://github.com/rochdev/backbone-ng-view for valid ways to bootstrap your application.");this.$compile=this.$injector.get("$compile"),this.$controller=this.$injector.get("$controller"),this.$http=this.$injector.get("$http"),this.$q=this.$injector.get("$q"),this.$rootScope=this.$injector.get("$rootScope"),this.$sce=this.$injector.get("$sce"),this.$templateCache=this.$injector.get("$templateCache")},_getLocals:function(){var t=e.extend({},this.options.resolve||{}),i=this._getTemplate();return e.forEach(t,e.bind(this,function(i,s){t[s]=e.isString(i)?this.$injector.get(i):this.$injector.invoke(i)})),e.isDefined(i)&&(t.$template=i),this.$q.all(t)},_getTemplate:function(){var t,i;return e.isDefined(t=this.options.template)?e.isFunction(t)&&(t=t()):e.isDefined(i=this.options.templateUrl)&&(e.isFunction(i)&&(i=i()),i=this.$sce.getTrustedResourceUrl(i),e.isDefined(i)&&(t=this.$http.get(i,{cache:this.$templateCache}).then(function(t){return t.data}))),t},_onSuccess:function(t){this._isRemoved===!1&&(this.$el.html(t.$template||""),this.scope=this.$rootScope.$new(),this.controller=this.$controller(this.options.controller||function(){},e.extend({$scope:this.scope},t)),this.options.controllerAs&&(this.scope[this.options.controllerAs]=this.$controller),this.$compile(this.el)(this.scope),this.trigger("ng:render:success"))},_onError:function(t){this.trigger("ng:render:error",[t])}})}(Backbone,angular);
//# sourceMappingURL=backbone-ng-view.min.js.map